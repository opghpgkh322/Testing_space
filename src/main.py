# main.py - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
import sys
import os
from PyQt5.QtWidgets import QApplication
from gui import MainWindow
from database import create_database


def get_db_path():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    if getattr(sys, 'frozen', False):
        # –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∫–∞–∫ —Å–æ–±—Ä–∞–Ω–Ω—ã–π exe
        base_dir = os.path.dirname(sys.executable)
        db_path = os.path.join(base_dir, 'data', 'database.db')
    else:
        # –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –∏–∑ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
        base_dir = os.path.dirname(os.path.abspath(__file__))
        db_path = os.path.join(base_dir, '..', 'data', 'database.db')

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø—É—Ç—å –∫ –∞–±—Å–æ–ª—é—Ç–Ω–æ–º—É –∏ –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º
    db_path = os.path.abspath(db_path)
    data_dir = os.path.dirname(db_path)

    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(data_dir):
        os.makedirs(data_dir)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö: {data_dir}")

    return db_path


def setup_application_style(app):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    app.setStyle('Fusion')

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—É—é —Ç–µ–º–Ω—É—é —Ç–µ–º—É –¥–ª—è Qt –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app.setStyleSheet("""
        QMainWindow {
            background-color: #2b2b2b;
            color: #ffffff;
        }
        QTabWidget::pane {
            border: 1px solid #555555;
            background-color: #3c3c3c;
        }
        QTabWidget::tab-bar {
            left: 5px;
        }
        QTabBar::tab {
            background-color: #555555;
            color: #ffffff;
            padding: 8px 12px;
            margin-right: 2px;
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }
        QTabBar::tab:selected {
            background-color: #4CAF50;
            font-weight: bold;
        }
        QTabBar::tab:hover {
            background-color: #666666;
        }
        QGroupBox {
            font-weight: bold;
            border: 2px solid #555555;
            border-radius: 5px;
            margin: 10px 0px;
            padding: 5px 0px;
        }
        QGroupBox::title {
            subcontrol-origin: margin;
            left: 10px;
            padding: 0 5px 0 5px;
        }
        QTableWidget {
            gridline-color: #555555;
            background-color: #404040;
            alternate-background-color: #4a4a4a;
        }
        QHeaderView::section {
            background-color: #555555;
            color: #ffffff;
            padding: 5px;
            font-weight: bold;
            border: none;
        }
        QPushButton {
            background-color: #555555;
            color: #ffffff;
            border: none;
            padding: 8px 16px;
            border-radius: 4px;
            font-weight: bold;
        }
        QPushButton:hover {
            background-color: #666666;
        }
        QPushButton:pressed {
            background-color: #444444;
        }
        QPushButton:disabled {
            background-color: #333333;
            color: #888888;
        }
        QLineEdit, QTextEdit, QComboBox, QSpinBox, QDoubleSpinBox {
            background-color: #404040;
            color: #ffffff;
            border: 1px solid #555555;
            padding: 5px;
            border-radius: 3px;
        }
        QLineEdit:focus, QTextEdit:focus, QComboBox:focus {
            border: 2px solid #4CAF50;
        }
        QLabel {
            color: #ffffff;
        }
        QStatusBar {
            background-color: #333333;
            color: #ffffff;
        }
        QMenuBar {
            background-color: #2b2b2b;
            color: #ffffff;
        }
        QMenuBar::item:selected {
            background-color: #4CAF50;
        }
        QMenu {
            background-color: #3c3c3c;
            color: #ffffff;
            border: 1px solid #555555;
        }
        QMenu::item:selected {
            background-color: #4CAF50;
        }
    """)


def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    required_modules = [
        'PyQt5',
        'reportlab',
        'sqlite3'
    ]

    missing_modules = []

    for module in required_modules:
        try:
            __import__(module)
        except ImportError:
            missing_modules.append(module)

    if missing_modules:
        print("‚ùå –û–®–ò–ë–ö–ê: –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏:")
        for module in missing_modules:
            print(f"  - {module}")
        print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        return False

    return True


def print_startup_info():
    """–í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–ø—É—Å–∫–µ"""
    print("=" * 60)
    print("üè≠ –°–ò–°–¢–ï–ú–ê –£–ü–†–ê–í–õ–ï–ù–ò–Ø –°–ö–õ–ê–î–û–ú - SPACE CONCEPT")
    print("   –í–µ—Ä—Å–∏—è: 2.0 (–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥)")
    print("   –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ: –£—á–µ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –≤–µ—Ä–µ–≤–æ—á–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤")
    print("=" * 60)
    print("üìÅ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
    print("   ‚îú‚îÄ‚îÄ services/     - –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –∏ —Ä–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏")
    print("   ‚îú‚îÄ‚îÄ widgets/      - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("   ‚îî‚îÄ‚îÄ utils/        - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã")
    print("=" * 60)
    print("üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—É—Å–∫–µ
        print_startup_info()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        if not check_dependencies():
            input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
            return 1

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Qt
        app = QApplication(sys.argv)
        app.setApplicationName("Space Concept - –°–∫–ª–∞–¥—Å–∫–æ–π —É—á–µ—Ç")
        app.setApplicationVersion("2.0")
        app.setOrganizationName("Space Concept")

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å—Ç–∏–ª—å
        setup_application_style(app)

        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_path = get_db_path()
        print(f"üìÇ –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_path}")

        # –°–æ–∑–¥–∞–µ–º/–ø—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            create_database(db_path)
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
            return 1

        # –í–ê–ñ–ù–û: –£–¥–∞–ª–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç—Ç–∞–ø–æ–≤ (–∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º main.py)
        # initialize_stages_data(db_path) - –£–î–ê–õ–ï–ù–û —Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥—É

        # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
        try:
            window = MainWindow(db_path)
            print("‚úÖ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ
            window.show()
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
            print("=" * 60)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            exit_code = app.exec_()

            print("\n" + "=" * 60)
            print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            print("=" * 60)

            return exit_code

        except ImportError as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {str(e)}")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞ –º–µ—Å—Ç–µ")
            return 1

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: {str(e)}")
            return 1

    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        return 0

    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ–¥–∞–µ–º –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞
    exit_code = main()
    sys.exit(exit_code)